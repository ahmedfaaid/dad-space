# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Comment {
  children: [Comment!]
  createdAt: DateTime!
  id: ID!
  parent: Comment
  post: Post!
  postedBy: User!
  text: String!
  updatedAt: DateTime!
}

input CommentInput {
  parentId: String
  postId: String!
  text: String!
}

type CommentsResponse {
  comments: [Comment!]
  errors: [Error!]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Error {
  message: String!
  path: String!
}

type Mutation {
  createComment(comment: CommentInput!): CommentsResponse!
  createPost(post: PostInput!): PostResponse!
  forgotPassword(email: String!): Boolean!
  login(email: String!, password: String!): UserResponse
  logout: Boolean!
  resetPassword(newPassword: String!, token: String!): UserResponse!
  signup(user: UserInput!): UserResponse
  vote(postId: String!, value: Int!): Boolean!
}

type Post {
  comments: [Comment!]!
  createdAt: DateTime!
  headline: String!
  id: ID!
  postedBy: User!
  text: String!
  topic: Topic!
  updatedAt: DateTime!
  voteCount: Int!
  voteStatus: Int
  votes: [Vote!]
}

input PostInput {
  headline: String!
  text: String!
  topicID: String!
}

type PostResponse {
  errors: [Error!]
  post: Post
}

type Query {
  comment(id: String!): Comment!
  comments: [Comment!]!
  me: User
  post(id: String!): PostResponse!
  posts(limit: Int!, skip: Int!): [Post!]!
  topics(query: String): [Topic!]!
  user: User!
  users: [User!]!
}

type Topic {
  createdAt: DateTime!
  description: String!
  id: ID!
  moderators: [User!]
  name: String!
  posts: [Post!]
  updatedAt: DateTime!
}

type User {
  comments: [Comment!]!
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  moderates: [Topic!]!
  posts: [Post!]!
  updatedAt: DateTime!
  votes: [Vote!]
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type UserResponse {
  errors: [Error!]
  user: User
}

type Vote {
  createdAt: DateTime!
  id: ID!
  post: Post!
  updatedAt: DateTime!
  user: User!
  value: Int!
}
